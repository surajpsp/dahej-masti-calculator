
import React, { useState } from "react";
import { useNavigate } from "react-router-dom";
import { DahejFormData } from "@/types";
import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import {
  Select,
  SelectContent,
  SelectGroup,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { toast } from "sonner";

// Generate array of numbers from start to end (inclusive)
const range = (start: number, end: number) => 
  Array.from({ length: end - start + 1 }, (_, i) => i + start);

const DahejForm: React.FC = () => {
  const navigate = useNavigate();
  
  const [formData, setFormData] = useState<DahejFormData>({
    name: "",
    age: 25,
    profession: "‡§Ö‡§®‡•ç‡§Ø",
    jobType: "‡§™‡•ç‡§∞‡§æ‡§á‡§µ‡•á‡§ü",
    monthlyIncome: 10000,
    houseCount: 1,
    landCount: 0,
  });
  
  const handleChange = (field: keyof DahejFormData, value: string | number) => {
    setFormData((prev) => ({ ...prev, [field]: value }));
  };

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    
    if (!formData.name.trim()) {
      toast.error("‡§ï‡•É‡§™‡§Ø‡§æ ‡§Ö‡§™‡§®‡§æ ‡§®‡§æ‡§Æ ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç!");
      return;
    }
    
    // Store form data in sessionStorage to pass to the results page
    sessionStorage.setItem("dahejFormData", JSON.stringify(formData));
    
    // Navigate to results page
    navigate("/results");
  };

  return (
    <Card className="w-full max-w-md mx-auto border-dahej-gold border-2 shadow-lg">
      <CardHeader className="bg-gradient-to-r from-dahej-orange/30 to-dahej-gold/30">
        <CardTitle className="text-center text-2xl">‡§¶‡§π‡•á‡§ú ‡§ó‡§£‡§®‡§æ ‡§´‡•â‡§∞‡•ç‡§Æ</CardTitle>
        <CardDescription className="text-center">‡§Ö‡§™‡§®‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§≠‡§∞‡•á‡§Ç</CardDescription>
      </CardHeader>
      <CardContent className="pt-6">
        <form onSubmit={handleSubmit} className="space-y-4">
          <div className="space-y-2">
            <Label htmlFor="name">‡§®‡§æ‡§Æ</Label>
            <Input 
              id="name" 
              value={formData.name}
              onChange={(e) => handleChange("name", e.target.value)}
              placeholder="‡§Ö‡§™‡§®‡§æ ‡§®‡§æ‡§Æ ‡§≤‡§ø‡§ñ‡•á‡§Ç"
              className="border-dahej-orange/50"
            />
          </div>
          
          <div className="space-y-2">
            <Label htmlFor="age">‡§Ü‡§Ø‡•Å</Label>
            <Select 
              value={formData.age.toString()} 
              onValueChange={(value) => handleChange("age", parseInt(value))}
            >
              <SelectTrigger className="border-dahej-orange/50">
                <SelectValue placeholder="‡§Ö‡§™‡§®‡•Ä ‡§Ü‡§Ø‡•Å ‡§ö‡•Å‡§®‡•á‡§Ç" />
              </SelectTrigger>
              <SelectContent>
                <SelectGroup>
                  {range(18, 50).map((age) => (
                    <SelectItem key={age} value={age.toString()}>
                      {age} ‡§µ‡§∞‡•ç‡§∑
                    </SelectItem>
                  ))}
                </SelectGroup>
              </SelectContent>
            </Select>
          </div>
          
          <div className="space-y-2">
            <Label htmlFor="profession">‡§™‡•á‡§∂‡§æ</Label>
            <Select 
              value={formData.profession} 
              onValueChange={(value) => handleChange("profession", value)}
            >
              <SelectTrigger className="border-dahej-orange/50">
                <SelectValue placeholder="‡§Ö‡§™‡§®‡§æ ‡§™‡•á‡§∂‡§æ ‡§ö‡•Å‡§®‡•á‡§Ç" />
              </SelectTrigger>
              <SelectContent>
                <SelectGroup>
                  <SelectItem value="‡§°‡•â‡§ï‡•ç‡§ü‡§∞">‡§°‡•â‡§ï‡•ç‡§ü‡§∞</SelectItem>
                  <SelectItem value="‡§á‡§Ç‡§ú‡•Ä‡§®‡§ø‡§Ø‡§∞">‡§á‡§Ç‡§ú‡•Ä‡§®‡§ø‡§Ø‡§∞</SelectItem>
                  <SelectItem value="‡§µ‡§ï‡•Ä‡§≤">‡§µ‡§ï‡•Ä‡§≤</SelectItem>
                  <SelectItem value="‡§¨‡§ø‡§ú‡§º‡§®‡•á‡§∏‡§Æ‡•à‡§®">‡§¨‡§ø‡§ú‡§º‡§®‡•á‡§∏‡§Æ‡•à‡§®</SelectItem>
                  <SelectItem value="‡§∂‡§ø‡§ï‡•ç‡§∑‡§ï">‡§∂‡§ø‡§ï‡•ç‡§∑‡§ï</SelectItem>
                  <SelectItem value="‡§Ö‡§®‡•ç‡§Ø">‡§Ö‡§®‡•ç‡§Ø</SelectItem>
                </SelectGroup>
              </SelectContent>
            </Select>
          </div>
          
          <div className="space-y-2">
            <Label htmlFor="jobType">‡§®‡•å‡§ï‡§∞‡•Ä ‡§ï‡§æ ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞</Label>
            <Select 
              value={formData.jobType} 
              onValueChange={(value) => handleChange("jobType", value)}
            >
              <SelectTrigger className="border-dahej-orange/50">
                <SelectValue placeholder="‡§®‡•å‡§ï‡§∞‡•Ä ‡§ï‡§æ ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ ‡§ö‡•Å‡§®‡•á‡§Ç" />
              </SelectTrigger>
              <SelectContent>
                <SelectGroup>
                  <SelectItem value="‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä">‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä</SelectItem>
                  <SelectItem value="‡§™‡•ç‡§∞‡§æ‡§á‡§µ‡•á‡§ü">‡§™‡•ç‡§∞‡§æ‡§á‡§µ‡•á‡§ü</SelectItem>
                  <SelectItem value="‡§µ‡•ç‡§Ø‡§µ‡§∏‡§æ‡§Ø‡•Ä">‡§µ‡•ç‡§Ø‡§µ‡§∏‡§æ‡§Ø‡•Ä</SelectItem>
                </SelectGroup>
              </SelectContent>
            </Select>
          </div>
          
          <div className="space-y-2">
            <Label htmlFor="monthlyIncome">‡§Æ‡§æ‡§∏‡§ø‡§ï ‡§Ü‡§Ø (‚Çπ)</Label>
            <Select 
              value={formData.monthlyIncome.toString()} 
              onValueChange={(value) => handleChange("monthlyIncome", parseInt(value))}
            >
              <SelectTrigger className="border-dahej-orange/50">
                <SelectValue placeholder="‡§Ö‡§™‡§®‡•Ä ‡§Ü‡§Ø ‡§ö‡•Å‡§®‡•á‡§Ç" />
              </SelectTrigger>
              <SelectContent>
                <SelectGroup>
                  <SelectItem value="2000">‚Çπ2,000</SelectItem>
                  <SelectItem value="5000">‚Çπ5,000</SelectItem>
                  <SelectItem value="10000">‚Çπ10,000</SelectItem>
                  <SelectItem value="15000">‚Çπ15,000</SelectItem>
                  <SelectItem value="20000">‚Çπ20,000</SelectItem>
                </SelectGroup>
              </SelectContent>
            </Select>
          </div>
          
          <div className="space-y-2">
            <Label htmlFor="houseCount">‡§ò‡§∞</Label>
            <Select 
              value={formData.houseCount.toString()} 
              onValueChange={(value) => handleChange("houseCount", parseInt(value))}
            >
              <SelectTrigger className="border-dahej-orange/50">
                <SelectValue placeholder="‡§ò‡§∞‡•ã‡§Ç ‡§ï‡•Ä ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ ‡§ö‡•Å‡§®‡•á‡§Ç" />
              </SelectTrigger>
              <SelectContent>
                <SelectGroup>
                  {range(0, 12).map((count) => (
                    <SelectItem key={count} value={count.toString()}>
                      {count}
                    </SelectItem>
                  ))}
                </SelectGroup>
              </SelectContent>
            </Select>
          </div>
          
          <div className="space-y-2">
            <Label htmlFor="landCount">‡§ú‡§Æ‡•Ä‡§® (‡§è‡§ï‡§°‡§º)</Label>
            <Select 
              value={formData.landCount.toString()} 
              onValueChange={(value) => handleChange("landCount", parseInt(value))}
            >
              <SelectTrigger className="border-dahej-orange/50">
                <SelectValue placeholder="‡§ú‡§Æ‡•Ä‡§® ‡§ï‡•Ä ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ ‡§ö‡•Å‡§®‡•á‡§Ç" />
              </SelectTrigger>
              <SelectContent>
                <SelectGroup>
                  {range(0, 12).map((count) => (
                    <SelectItem key={count} value={count.toString()}>
                      {count}
                    </SelectItem>
                  ))}
                </SelectGroup>
              </SelectContent>
            </Select>
          </div>
          
          <Button 
            type="submit" 
            className="w-full bg-dahej-red hover:bg-dahej-red/90 text-white"
          >
            ‡§ó‡§£‡§®‡§æ ‡§ï‡§∞‡•á‡§Ç
          </Button>
        </form>
      </CardContent>
      <CardFooter>
        <p className="text-xs text-center text-gray-500 w-full">
          üëâ ‡§Ø‡§π ‡§∏‡§ø‡§∞‡•ç‡§´ ‡§Æ‡§®‡•ã‡§∞‡§Ç‡§ú‡§® ‡§ï‡•á ‡§≤‡§ø‡§è ‡§π‡•à‡•§ ‡§¶‡§π‡•á‡§ú ‡§≤‡•á‡§®‡§æ ‡§î‡§∞ ‡§¶‡•á‡§®‡§æ ‡§ï‡§æ‡§®‡•Ç‡§®‡•Ä ‡§Ö‡§™‡§∞‡§æ‡§ß ‡§π‡•à‡•§
        </p>
      </CardFooter>
    </Card>
  );
};

export default DahejForm;
